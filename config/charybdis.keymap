#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hm_l: hm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <13 14 15 16>;
        };

        hm_r: hm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <19 20 21 22>;
        };

        as_k: as_k {
            compatible = "zmk,behavior-hold-tap";
            label = "AS_K";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
        };

        tap_mod_k: tap_mod_k {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_MOD_K";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <37 36 39 40>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_lbrc {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <8 7>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_rbrc {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <8 9>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_lpar {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <19 20>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_rpar {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <20 21>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_lbkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <7 19>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_rbkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <9 21>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_lt {
            bindings = <&kp LESS_THAN>;
            key-positions = <31 32>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_gt {
            bindings = <&kp GREATER_THAN>;
            key-positions = <32 33>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_qs {
            bindings = <&kp QUESTION>;
            key-positions = <34 33>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_eq {
            bindings = <&kp EQUAL>;
            key-positions = <20 32>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_pos {
            bindings = <&kp PLUS>;
            key-positions = <19 31>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_neg {
            bindings = <&kp MINUS>;
            key-positions = <21 33>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_bslh {
            bindings = <&kp NON_US_BACKSLASH>;
            key-positions = <6 18>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_pipe {
            bindings = <&kp PIPE>;
            key-positions = <18 30>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_grve {
            bindings = <&kp GRAVE>;
            key-positions = <10 22>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_tilde {
            bindings = <&kp TILDE>;
            key-positions = <22 34>;
            timeout-ms = <50>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
&kp ESCAPE  &kp Q         &kp W         &kp E          &kp R               &kp T               &kp Y               &kp U                   &kp I          &kp O         &kp P                 &kp DELETE
&kp LCTRL   &hm_l LGUI A  &hm_l LALT S  &hm_l LCTRL D  &hm_l LEFT_SHIFT F  &kp G               &kp H               &hm_r RIGHT_SHIFT J     &hm_r RCTRL K  &hm_r RALT L  &hm_r RGUI SEMICOLON  &as_k DOUBLE_QUOTES SINGLE_QUOTE
&kp LSHFT   &kp Z         &kp X         &kp C          &kp V               &kp B               &kp N               &kp M                   &kp COMMA      &kp PERIOD    &kp SLASH             &kp RSHIFT
                                        &mo 3          &tap_mod_k 1 SPACE  &tap_mod_k 2 TAB    &tap_mod_k 4 ENTER  &tap_mod_k 5 BACKSPACE
            >;
        };

        NUM {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp MINUS  &kp N7  &kp N8  &kp N9  &kp BSLH   &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp LBKT   &kp N4  &kp N5  &kp N6  &kp RBKT   &trans
&trans  &trans    &trans    &trans     &trans     &trans    &kp PLUS   &kp N1  &kp N2  &kp N3  &kp GRAVE  &trans
                            &trans     &trans     &trans    &kp DOT    &kp N0
            >;

            label = "num";
        };

        SYM {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp UNDERSCORE        &kp AMPERSAND          &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp PIPE         &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp LEFT_BRACE        &kp DOLLAR             &kp PERCENT   &kp CARET             &kp RIGHT_BRACE  &trans
&trans  &trans    &trans    &trans     &trans     &trans    &kp EQUAL             &kp EXCLAMATION        &kp AT_SIGN   &kp HASH              &kp TILDE        &trans
                            &trans     &trans     &trans    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
            >;

            label = "sym";
        };

        Navs {
            label = "Navs";
            bindings = <
&trans  &trans    &trans    &trans     &trans      &trans    &trans        &trans    &trans         &trans       &trans     &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHIFT  &trans    &kp CAPSLOCK  &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans
&trans  &trans    &trans    &trans     &trans      &trans    &kp INSERT    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans
                            &trans     &trans      &trans    &trans        &trans
            >;
        };

        FUN {
            bindings = <
&bootloader  &kp F7  &kp F8  &kp F9  &kp F10     &kp PRINTSCREEN    &trans  &trans     &trans     &trans    &trans    &bootloader
&trans       &kp F4  &kp F5  &kp F6  &kp F11     &kp SCROLLLOCK     &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans       &kp F1  &kp F2  &kp F3  &kp F12     &kp PAUSE_BREAK    &trans  &trans     &trans     &trans    &trans    &trans
                             &trans  &kp C_MENU  &trans             &trans  &trans
            >;

            label = "fun";
        };

        MEDIA {
            bindings = <
&trans  &bt BT_SEL 0     &bt BT_SEL 1       &bt BT_SEL 2        &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp C_MUTE          &kp C_PLAY    &bt BT_CLR      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp C_NEXT       &kp C_PREVIOUS     &kp C_FAST_FORWARD  &kp C_REWIND  &out OUT_TOG    &trans  &trans  &trans  &trans  &trans  &trans
                                            &trans              &trans        &trans          &trans  &trans
            >;

            label = "media";
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans     &trans     &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans       &trans  &trans  &trans  &trans  &trans  &mkp MCLK
                        &mkp MCLK  &mkp LCLK  &mkp RCLK    &trans  &trans
            >;
        };
    };
};
