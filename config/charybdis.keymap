#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hm_l: hm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <13 14 15 16>;
        };

        hm_r: hm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <19 20 21 22>;
        };

        as_k: as_k {
            compatible = "zmk,behavior-hold-tap";
            label = "AS_K";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
        };

        tap_mod_k: tap_mod_k {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_MOD_K";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
&kp TAB    &kp Q         &kp W         &kp E          &kp R               &kp T    &kp Y      &kp U                &kp I                  &kp O                      &kp P                 &mo 3
&kp LCTRL  &hm_l LGUI A  &hm_l LALT S  &hm_l LCTRL D  &hm_l LEFT_SHIFT F  &kp G    &kp H      &hm_r RIGHT_SHIFT J  &hm_r RCTRL K          &hm_r RALT L               &hm_r RGUI SEMICOLON  &as_k DOUBLE_QUOTES SINGLE_QUOTE
&kp LSHFT  &kp Z         &kp X         &kp C          &kp V               &kp B    &kp N      &kp M                &as_k LESS_THAN COMMA  &as_k GREATER_THAN PERIOD  &as_k QUESTION SLASH  &kp RSHIFT
                                       &kp ESC        &tap_mod_k 2 SPACE  &mo 1    &kp ENTER  &kp BACKSPACE
            >;
        };

        Syms {
            label = "Syms";
            bindings = <
&trans  &as_k EXCLAMATION NUMBER_1  &as_k AT_SIGN NUMBER_2  &as_k HASH NUMBER_3  &as_k DOLLAR NUMBER_4  &as_k PERCENT NUMBER_5    &as_k CARET NUMBER_6  &as_k AMPERSAND NUMBER_7  &as_k ASTERISK NUMBER_8  &as_k LEFT_PARENTHESIS NUMBER_9  &as_k RIGHT_PARENTHESIS NUMBER_0  &trans
&trans  &trans                      &trans                  &trans               &trans                 &trans                    &kp UNDER             &kp EQUAL                 &kp LBKT                 &kp RBKT                         &kp BSLH                          &kp GRAVE
&trans  &trans                      &trans                  &trans               &trans                 &trans                    &kp MINUS             &kp PLUS                  &kp LBRC                 &kp RBRC                         &kp PIPE                          &kp TILDE
                                                            &kp LGUI             &kp SPACE              &trans                    &trans                &kp BACKSPACE
            >;
        };

        Navs {
            label = "Navs";
            bindings = <
&trans        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans      &trans         &trans       &kp PRINTSCREEN  &trans
&trans        &bt BT_NXT    &bt BT_PRV    &bt BT_CLR    &out OUT_TOG  &trans          &trans  &kp LEFT    &kp DOWN       &kp UP       &kp RIGHT        &trans
&kp LEFT_ALT  &trans        &trans        &trans        &trans        &trans          &trans  &kp HOME    &kp PAGE_DOWN  &kp PAGE_UP  &kp END          &trans
                                          &kp LGUI      &kp SPACE     &trans          &trans  &kp DELETE
            >;
        };

        Func {
            bindings = <
&trans  &kp F1           &kp F2             &kp F3      &kp F4        &kp F5    &kp F6  &kp F7       &kp F8  &kp F9  &kp F10  &trans
&trans  &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp C_MUTE  &kp C_PLAY    &trans    &trans  &trans       &trans  &trans  &kp F11  &kp F12
&trans  &kp C_NEXT       &kp C_PREV         &kp C_FF    &kp C_REWIND  &trans    &trans  &trans       &trans  &trans  &trans   &trans
                                            &trans      &bootloader   &trans    &trans  &bootloader
            >;
        };

        Mouse {
            bindings = <
&trans     &trans  &trans  &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&mkp LCLK  &trans  &trans  &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &mkp MCLK
                           &mkp RCLK  &trans  &trans    &trans  &trans
            >;
        };
    };
};
